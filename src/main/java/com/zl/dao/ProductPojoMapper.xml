<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.dao.ProductPojoMapper">
  <resultMap id="BaseResultMap" type="com.zl.pojo.ProductPojo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="rank" jdbcType="VARCHAR" property="rank" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
    <result column="warehouse" jdbcType="VARCHAR" property="warehouse" />
    <result column="proStatus" jdbcType="INTEGER" property="prostatus" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="classId" jdbcType="INTEGER" property="classId" />
    <result column="sourceId" jdbcType="INTEGER" property="sourceId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, area, type, rank, count, price, currency, warehouse, proStatus, remark, 
    classId, sourceId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zl.pojo.ProductPojo">
    insert into product (id, name, area, 
      type, rank, count, 
      price, currency, warehouse, 
      proStatus, remark, classId, sourceId
      )
    values (default, #{name,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{rank,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{currency,jdbcType=VARCHAR}, #{warehouse,jdbcType=VARCHAR}, 
      #{proStatus,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{classId,jdbcType=INTEGER},
      #{sourceId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zl.pojo.ProductPojo">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="warehouse != null">
        warehouse,
      </if>
      <if test="prostatus != null">
        proStatus,
      </if>
      <if test="remark != null">
        remark,
      </if>
       <if test="classid != null">
        classId
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="warehouse != null">
        #{warehouse,jdbcType=VARCHAR},
      </if>
      <if test="prostatus != null">
        #{prostatus,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
       <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zl.pojo.ProductPojo">
    update product
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        rank = #{rank,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="warehouse != null">
        warehouse = #{warehouse,jdbcType=VARCHAR},
      </if>
      <if test="prostatus != null">
        proStatus = #{prostatus,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sourceid != null">
        sourceId = #{sourceid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zl.pojo.ProductPojo">
    update product
    set name = #{name,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      rank = #{rank,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      currency = #{currency,jdbcType=VARCHAR},
      warehouse = #{warehouse,jdbcType=VARCHAR},
      proStatus = #{prostatus,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      sourceId = #{sourceid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>